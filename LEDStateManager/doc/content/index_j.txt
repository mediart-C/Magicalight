LEDStateManager - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

LEDStateManagerはOpenRTM-aist 1.0.0以上のC++版が必要です。

LEDStateManagerは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

LEDStateManagerは ``LEDStateManagerComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``LEDStateManager`` を初期化関数の ``LEDStateManagerInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf LEDStateManager-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd LEDStateManager-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

LEDStateManagerは ``LEDStateManagerComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libLEDStateManager.so`` を初期化関数の ``LEDStateManagerInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
Mode             int                0                連動方法を設定します．<br/>Mode 0:通常連動モード<br/>Mode 1:イエスマンモード<br/>Mode 2:ランダムモード<br/>Mode 3:非連動モード<br/>その他:全出力ポートにfalseを入力
BaseUnitNum      int                0                連動時の親機の番号を設定します．
inportNum        int                4                使用するinportの数を決定します．
outportNum       int                4                使用するinportの数を決定します．
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
in0             InPort      RTC::TimedBoolean              現在接続されているLEDの点灯/消灯に応じてtrue/falseが入力されます．<br/>接続するLEDの数に応じてConfiguration:inportNumの値を変更してください．ポートの呼び名は上から0番，1番，・・・としています．
out0            OutPort     RTC::TimedBoolean              連動処理後のLEDの点灯/消灯に応じてtrue/falseが出力されます．<br/>接続するLEDの数に応じてConfiguration:outportNumの値を変更してください．<br/>ポートの呼び名は上から0番，1番，・・・としています．
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/LEDStateManager/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

